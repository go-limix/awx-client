/*
 * Snippets API
 *
 * Test description
 *
 * API version: v1
 * Contact: contact@snippets.local
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

type JobDetail struct {
	Id int32 `json:"id,omitempty"`
	Type_ string `json:"type,omitempty"`
	Url string `json:"url,omitempty"`
	Related *interface{} `json:"related,omitempty"`
	SummaryFields *interface{} `json:"summary_fields,omitempty"`
	Created string `json:"created,omitempty"`
	Modified string `json:"modified,omitempty"`
	Name string `json:"name"`
	Description string `json:"description,omitempty"`
	JobType string `json:"job_type,omitempty"`
	Inventory int32 `json:"inventory,omitempty"`
	Project string `json:"project,omitempty"`
	Playbook string `json:"playbook,omitempty"`
	// Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true.
	ScmBranch string `json:"scm_branch,omitempty"`
	Forks int32 `json:"forks,omitempty"`
	Limit string `json:"limit,omitempty"`
	Verbosity int32 `json:"verbosity,omitempty"`
	ExtraVars string `json:"extra_vars,omitempty"`
	JobTags string `json:"job_tags,omitempty"`
	ForceHandlers bool `json:"force_handlers,omitempty"`
	SkipTags string `json:"skip_tags,omitempty"`
	StartAtTask string `json:"start_at_task,omitempty"`
	// The amount of time (in seconds) to run before the task is canceled.
	Timeout int32 `json:"timeout,omitempty"`
	// If enabled, the service will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible.
	UseFactCache bool `json:"use_fact_cache,omitempty"`
	// The organization used to determine access to this unified job.
	Organization int32 `json:"organization,omitempty"`
	UnifiedJobTemplate string `json:"unified_job_template,omitempty"`
	LaunchType string `json:"launch_type,omitempty"`
	Status string `json:"status,omitempty"`
	// The container image to be used for execution.
	ExecutionEnvironment int32 `json:"execution_environment,omitempty"`
	Failed bool `json:"failed,omitempty"`
	// The date and time the job was queued for starting.
	Started time.Time `json:"started,omitempty"`
	// The date and time the job finished execution.
	Finished time.Time `json:"finished,omitempty"`
	// The date and time when the cancel request was sent.
	CanceledOn time.Time `json:"canceled_on,omitempty"`
	// Elapsed time in seconds that the job ran.
	Elapsed string `json:"elapsed,omitempty"`
	JobArgs string `json:"job_args,omitempty"`
	JobCwd string `json:"job_cwd,omitempty"`
	JobEnv *interface{} `json:"job_env,omitempty"`
	// A status field to indicate the state of the job if it wasn't able to run and capture stdout
	JobExplanation string `json:"job_explanation,omitempty"`
	// The node the job executed on.
	ExecutionNode string `json:"execution_node,omitempty"`
	// The instance that managed the execution environment.
	ControllerNode string `json:"controller_node,omitempty"`
	ResultTraceback string `json:"result_traceback,omitempty"`
	// Indicates whether all of the events generated by this unified job have been saved to the database.
	EventProcessingFinished bool `json:"event_processing_finished,omitempty"`
	LaunchedBy *LaunchedBy `json:"launched_by,omitempty"`
	// The Receptor work unit ID associated with this job.
	WorkUnitId string `json:"work_unit_id,omitempty"`
	JobTemplate string `json:"job_template,omitempty"`
	PasswordsNeededToStart string `json:"passwords_needed_to_start,omitempty"`
	AllowSimultaneous bool `json:"allow_simultaneous,omitempty"`
	Artifacts string `json:"artifacts,omitempty"`
	// The SCM Revision from the Project used for this job, if available
	ScmRevision string `json:"scm_revision,omitempty"`
	// The Instance group the job was run under
	InstanceGroup int32 `json:"instance_group,omitempty"`
	// If enabled, textual changes made to any templated files on the host are shown in the standard output
	DiffMode bool `json:"diff_mode,omitempty"`
	// If part of a sliced job, the ID of the inventory slice operated on. If not part of sliced job, parameter is not used.
	JobSliceNumber int32 `json:"job_slice_number,omitempty"`
	// If ran as part of sliced jobs, the total number of slices. If 1, job is not part of a sliced job.
	JobSliceCount int32 `json:"job_slice_count,omitempty"`
	// Service that webhook requests will be accepted from
	WebhookService string `json:"webhook_service,omitempty"`
	// Personal Access Token for posting back the status to the service API
	WebhookCredential int32 `json:"webhook_credential,omitempty"`
	// Unique identifier of the event that triggered this webhook
	WebhookGuid string `json:"webhook_guid,omitempty"`
	// A count of hosts uniquely assigned to each status.
	HostStatusCounts string `json:"host_status_counts,omitempty"`
	// A count of all plays and tasks for the job run.
	PlaybookCounts string `json:"playbook_counts,omitempty"`
	CustomVirtualenv string `json:"custom_virtualenv,omitempty"`
}
