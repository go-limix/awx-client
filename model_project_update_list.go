/*
 * Snippets API
 *
 * Test description
 *
 * API version: v1
 * Contact: contact@snippets.local
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

type ProjectUpdateList struct {
	Id int32 `json:"id,omitempty"`
	Type_ string `json:"type,omitempty"`
	Url string `json:"url,omitempty"`
	Related *interface{} `json:"related,omitempty"`
	SummaryFields *interface{} `json:"summary_fields,omitempty"`
	Created string `json:"created,omitempty"`
	Modified string `json:"modified,omitempty"`
	Name string `json:"name"`
	Description string `json:"description,omitempty"`
	UnifiedJobTemplate string `json:"unified_job_template,omitempty"`
	LaunchType string `json:"launch_type,omitempty"`
	Status string `json:"status,omitempty"`
	// The container image to be used for execution.
	ExecutionEnvironment int32 `json:"execution_environment,omitempty"`
	Failed bool `json:"failed,omitempty"`
	// The date and time the job was queued for starting.
	Started time.Time `json:"started,omitempty"`
	// The date and time the job finished execution.
	Finished time.Time `json:"finished,omitempty"`
	// The date and time when the cancel request was sent.
	CanceledOn time.Time `json:"canceled_on,omitempty"`
	// Elapsed time in seconds that the job ran.
	Elapsed string `json:"elapsed,omitempty"`
	// A status field to indicate the state of the job if it wasn't able to run and capture stdout
	JobExplanation string `json:"job_explanation,omitempty"`
	// The node the job executed on.
	ExecutionNode string `json:"execution_node,omitempty"`
	LaunchedBy *LaunchedBy `json:"launched_by,omitempty"`
	// The Receptor work unit ID associated with this job.
	WorkUnitId string `json:"work_unit_id,omitempty"`
	// Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.
	LocalPath string `json:"local_path,omitempty"`
	// Specifies the source control system used to store the project.
	ScmType string `json:"scm_type,omitempty"`
	// The location where the project is stored.
	ScmUrl string `json:"scm_url,omitempty"`
	// Specific branch, tag or commit to checkout.
	ScmBranch string `json:"scm_branch,omitempty"`
	// For git projects, an additional refspec to fetch.
	ScmRefspec string `json:"scm_refspec,omitempty"`
	// Discard any local changes before syncing the project.
	ScmClean bool `json:"scm_clean,omitempty"`
	// Track submodules latest commits on defined branch.
	ScmTrackSubmodules bool `json:"scm_track_submodules,omitempty"`
	// Delete the project before syncing.
	ScmDeleteOnUpdate bool `json:"scm_delete_on_update,omitempty"`
	Credential int32 `json:"credential,omitempty"`
	// The amount of time (in seconds) to run before the task is canceled.
	Timeout int32 `json:"timeout,omitempty"`
	// The SCM Revision discovered by this update for the given project and branch.
	ScmRevision string `json:"scm_revision,omitempty"`
	Project string `json:"project,omitempty"`
	JobType string `json:"job_type,omitempty"`
	// Parts of the project update playbook that will be run.
	JobTags string `json:"job_tags,omitempty"`
}
